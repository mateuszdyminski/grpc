// Code generated by protoc-gen-go.
// source: load.proto
// DO NOT EDIT!

/*
Package load is a generated protocol buffer package.

It is generated from these files:
	load.proto

It has these top-level messages:
	Request
	Result
*/
package load

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
const _ = proto.ProtoPackageIsVersion1

type Request struct {
	BatchSize int32 `protobuf:"varint,1,opt,name=batchSize" json:"batchSize,omitempty"`
	Total     int32 `protobuf:"varint,2,opt,name=total" json:"total,omitempty"`
}

func (m *Request) Reset()                    { *m = Request{} }
func (m *Request) String() string            { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()               {}
func (*Request) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Result struct {
	Users []*Result_User `protobuf:"bytes,1,rep,name=users" json:"users,omitempty"`
}

func (m *Result) Reset()                    { *m = Result{} }
func (m *Result) String() string            { return proto.CompactTextString(m) }
func (*Result) ProtoMessage()               {}
func (*Result) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Result) GetUsers() []*Result_User {
	if m != nil {
		return m.Users
	}
	return nil
}

type Result_User struct {
	FirstName  string                 `protobuf:"bytes,1,opt,name=firstName" json:"firstName,omitempty"`
	LastName   string                 `protobuf:"bytes,2,opt,name=lastName" json:"lastName,omitempty"`
	BirthDay   int64                  `protobuf:"varint,3,opt,name=birthDay" json:"birthDay,omitempty"`
	Phone      string                 `protobuf:"bytes,4,opt,name=phone" json:"phone,omitempty"`
	Gender     int32                  `protobuf:"varint,5,opt,name=gender" json:"gender,omitempty"`
	IsEmployed bool                   `protobuf:"varint,6,opt,name=isEmployed" json:"isEmployed,omitempty"`
	Salary     float64                `protobuf:"fixed64,7,opt,name=salary" json:"salary,omitempty"`
	Bio        string                 `protobuf:"bytes,8,opt,name=bio" json:"bio,omitempty"`
	WebSites   []*Result_User_WebSite `protobuf:"bytes,9,rep,name=webSites" json:"webSites,omitempty"`
}

func (m *Result_User) Reset()                    { *m = Result_User{} }
func (m *Result_User) String() string            { return proto.CompactTextString(m) }
func (*Result_User) ProtoMessage()               {}
func (*Result_User) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 0} }

func (m *Result_User) GetWebSites() []*Result_User_WebSite {
	if m != nil {
		return m.WebSites
	}
	return nil
}

type Result_User_WebSite struct {
	Url      string   `protobuf:"bytes,1,opt,name=url" json:"url,omitempty"`
	Title    string   `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
	Snippets []string `protobuf:"bytes,3,rep,name=snippets" json:"snippets,omitempty"`
}

func (m *Result_User_WebSite) Reset()                    { *m = Result_User_WebSite{} }
func (m *Result_User_WebSite) String() string            { return proto.CompactTextString(m) }
func (*Result_User_WebSite) ProtoMessage()               {}
func (*Result_User_WebSite) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 0, 0} }

func init() {
	proto.RegisterType((*Request)(nil), "load.Request")
	proto.RegisterType((*Result)(nil), "load.Result")
	proto.RegisterType((*Result_User)(nil), "load.Result.User")
	proto.RegisterType((*Result_User_WebSite)(nil), "load.Result.User.WebSite")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion2

// Client API for Load service

type LoadClient interface {
	// Load loads specified number of users.
	Load(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Result, error)
	// LoadStream loads specified numeber of users but in stream.
	LoadStream(ctx context.Context, in *Request, opts ...grpc.CallOption) (Load_LoadStreamClient, error)
}

type loadClient struct {
	cc *grpc.ClientConn
}

func NewLoadClient(cc *grpc.ClientConn) LoadClient {
	return &loadClient{cc}
}

func (c *loadClient) Load(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := grpc.Invoke(ctx, "/load.Load/Load", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *loadClient) LoadStream(ctx context.Context, in *Request, opts ...grpc.CallOption) (Load_LoadStreamClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_Load_serviceDesc.Streams[0], c.cc, "/load.Load/LoadStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &loadLoadStreamClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Load_LoadStreamClient interface {
	Recv() (*Result, error)
	grpc.ClientStream
}

type loadLoadStreamClient struct {
	grpc.ClientStream
}

func (x *loadLoadStreamClient) Recv() (*Result, error) {
	m := new(Result)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Server API for Load service

type LoadServer interface {
	// Load loads specified number of users.
	Load(context.Context, *Request) (*Result, error)
	// LoadStream loads specified numeber of users but in stream.
	LoadStream(*Request, Load_LoadStreamServer) error
}

func RegisterLoadServer(s *grpc.Server, srv LoadServer) {
	s.RegisterService(&_Load_serviceDesc, srv)
}

func _Load_Load_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LoadServer).Load(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/load.Load/Load",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LoadServer).Load(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _Load_LoadStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Request)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(LoadServer).LoadStream(m, &loadLoadStreamServer{stream})
}

type Load_LoadStreamServer interface {
	Send(*Result) error
	grpc.ServerStream
}

type loadLoadStreamServer struct {
	grpc.ServerStream
}

func (x *loadLoadStreamServer) Send(m *Result) error {
	return x.ServerStream.SendMsg(m)
}

var _Load_serviceDesc = grpc.ServiceDesc{
	ServiceName: "load.Load",
	HandlerType: (*LoadServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Load",
			Handler:    _Load_Load_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "LoadStream",
			Handler:       _Load_LoadStream_Handler,
			ServerStreams: true,
		},
	},
}

var fileDescriptor0 = []byte{
	// 383 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x84, 0x92, 0x4f, 0xcb, 0xd4, 0x30,
	0x10, 0xc6, 0x4d, 0xd3, 0x76, 0xdb, 0xd1, 0x17, 0x34, 0x88, 0xc4, 0x22, 0x52, 0x0a, 0x62, 0x2f,
	0x16, 0x79, 0xc5, 0xa3, 0x97, 0x17, 0x65, 0x2f, 0xab, 0x2c, 0x59, 0xc4, 0x8b, 0x97, 0x74, 0x1b,
	0x77, 0x03, 0xe9, 0xa6, 0x26, 0x29, 0xb2, 0x7e, 0x08, 0x3f, 0x84, 0x1f, 0xcb, 0x4f, 0x23, 0x49,
	0xbb, 0x7f, 0xc0, 0x83, 0xa7, 0xce, 0x6f, 0x9e, 0x99, 0xce, 0xf4, 0xe9, 0x00, 0x28, 0xcd, 0xbb,
	0x66, 0x30, 0xda, 0x69, 0x12, 0xfb, 0xb8, 0x7a, 0x07, 0x0b, 0x26, 0xbe, 0x8f, 0xc2, 0x3a, 0xf2,
	0x0c, 0xf2, 0x96, 0xbb, 0xed, 0x7e, 0x23, 0x7f, 0x0a, 0x8a, 0x4a, 0x54, 0x27, 0xec, 0x92, 0x20,
	0x8f, 0x21, 0x71, 0xda, 0x71, 0x45, 0xa3, 0xa0, 0x4c, 0x50, 0xfd, 0xc2, 0x90, 0x32, 0x61, 0x47,
	0xe5, 0xc8, 0x4b, 0x48, 0x46, 0x2b, 0x8c, 0xa5, 0xa8, 0xc4, 0xf5, 0xfd, 0xdb, 0x47, 0x4d, 0x98,
	0x35, 0x89, 0xcd, 0x67, 0x2b, 0x0c, 0x9b, 0xf4, 0xe2, 0x4f, 0x04, 0xb1, 0x67, 0x3f, 0xf0, 0x9b,
	0x34, 0xd6, 0x7d, 0xe2, 0xfd, 0x34, 0x30, 0x67, 0x97, 0x04, 0x29, 0x20, 0x53, 0x7c, 0x16, 0xa3,
	0x20, 0x9e, 0xd9, 0x6b, 0xad, 0x34, 0x6e, 0xff, 0x9e, 0x1f, 0x29, 0x2e, 0x51, 0x8d, 0xd9, 0x99,
	0xfd, 0xa2, 0xc3, 0x5e, 0x1f, 0x04, 0x8d, 0x43, 0xd3, 0x04, 0xe4, 0x09, 0xa4, 0x3b, 0x71, 0xe8,
	0x84, 0xa1, 0x49, 0xd8, 0x7f, 0x26, 0xf2, 0x1c, 0x40, 0xda, 0x0f, 0xfd, 0xa0, 0xf4, 0x51, 0x74,
	0x34, 0x2d, 0x51, 0x9d, 0xb1, 0xab, 0x8c, 0xef, 0xb3, 0x5c, 0x71, 0x73, 0xa4, 0x8b, 0x12, 0xd5,
	0x88, 0xcd, 0x44, 0x1e, 0x02, 0x6e, 0xa5, 0xa6, 0x59, 0x98, 0xe1, 0x43, 0xf2, 0x16, 0xb2, 0x1f,
	0xa2, 0xdd, 0x48, 0x27, 0x2c, 0xcd, 0x83, 0x05, 0x4f, 0xff, 0xb1, 0xa0, 0xf9, 0x32, 0x55, 0xb0,
	0x73, 0x69, 0xf1, 0x11, 0x16, 0x73, 0xd2, 0xbf, 0x73, 0x34, 0x6a, 0x76, 0xc2, 0x87, 0xc1, 0x74,
	0xe9, 0xd4, 0xc9, 0x80, 0x09, 0xfc, 0xd7, 0xdb, 0x83, 0x1c, 0x06, 0xe1, 0x2c, 0xc5, 0x25, 0xf6,
	0xce, 0x9c, 0xf8, 0xf6, 0x2b, 0xc4, 0x2b, 0xcd, 0x3b, 0xf2, 0x62, 0x7e, 0xde, 0x9c, 0x76, 0x08,
	0xff, 0xb8, 0x78, 0x70, 0xbd, 0x52, 0x75, 0x8f, 0xbc, 0x02, 0xf0, 0x65, 0x1b, 0x67, 0x04, 0xef,
	0xff, 0x53, 0xfc, 0x1a, 0xdd, 0x55, 0x70, 0xb3, 0xd5, 0x7d, 0xb3, 0x33, 0xc3, 0x36, 0x68, 0x77,
	0xb9, 0xef, 0x5e, 0xfb, 0x7b, 0x5a, 0xa3, 0xdf, 0x11, 0x5e, 0x2e, 0x57, 0x6d, 0x1a, 0xce, 0xeb,
	0xcd, 0xdf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x79, 0x42, 0x25, 0x65, 0x6c, 0x02, 0x00, 0x00,
}
